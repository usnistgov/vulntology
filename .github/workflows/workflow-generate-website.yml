name: Generate Website
on:
  workflow_call:
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires the access_token to be passed'
        required: false
        default: false
        type: boolean
      bad_links_fail_build:
        description: 'a boolean flag that determines if bad links found by the link checker fail fast and stop a complete build'
        required: false
        default: true
        type: boolean
    secrets:
      access_token:
        description: 'the access token to use for commits'
        required: false
  workflow_dispatch:
    branches:
    - main
    - develop
    - "release-*"
    inputs:
      commit_resources:
        description: 'commit the resources after generating them. Requires a PAT defined as secrets.COMMIT_TOKEN'
        required: true
        default: false
        type: boolean
      bad_links_fail_build:
        description: 'a boolean flag that determines if bad links found by the link checker fail fast and stop a complete build'
        required: false
        default: true
        type: boolean
      create_issue:
        description: 'create new GitHub issue if broken links found'
        required: false
        default: false
        type: boolean
jobs:
  build-and-push-website:
    name: Build and Push Website
    runs-on: ubuntu-20.04
    env:
      BUILD_PATH: ./build
    steps:
    # use this for builds triggered from the UI on protected branches
    - name: Checkout Latest (using COMMIT_TOKEN)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.commit_resources == 'true'
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      with:
        token: ${{ secrets.COMMIT_TOKEN }}
        submodules: recursive
      id: checkout_latest_workflow
    # use this for builds triggered from other workflows on protected branches
    - name: Checkout Latest (using access_token)
      if: github.event_name == 'push' && inputs.commit_resources == true
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      with:
        token: ${{ secrets.access_token }}
        submodules: recursive
      id: checkout_latest_push
    # use this for overything else (i.e., pull requests) where publication is not needed
    - name: Checkout Latest
      if: steps.checkout_latest_workflow.conclusion == 'skipped' && steps.checkout_latest_push.conclusion == 'skipped'
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      with:
        submodules: recursive
    - name: Setup Swap Space
      # Since Hugo is requiring more memory
      uses: pierotofy/set-swap-space@49819abfb41bd9b44fb781159c033dba90353a7c
      with:
        swap-size-gb: 10
    # Install Hugo
    - name: Read .env
      id: hugo-version
      run: |
        . ./.env
        echo "HUGO_VERSION=${HUGO_VERSION}" >> "${GITHUB_OUTPUT}"
    - name: Setup Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: '${{ steps.hugo-version.outputs.HUGO_VERSION }}'
        extended: true
    - name: Set up NodeJS
      uses: actions/setup-node@5e21ff4d9bc1a8cf6de233a3057d20ec6b3fb69d
      with:
        node-version-file: 'build/.nvmrc'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    - name: Setup Dependencies
      run: |
        # NodeJS
        # If you are a developer and need to modify the workflow, be sure to review
        # the package.json and package-lock.json to ensure the following deps are
        # at least installed (they will be updated by dependabot):
        # - ajv-cli
        # - ajv-formats
        # - markdown-link-check
        # - yaml-convert
        npm install --loglevel verbose
        echo "$PWD/node_modules/.bin/" >> $GITHUB_PATH
        # Dart-Sass
        sudo snap install dart-sass
    # cache hugo modules
    - uses: actions/cache@v2
      with:
        path: /tmp/hugo_cache
        key: ${{ runner.os }}-hugomod-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-hugomod-        
    - name: Run Hugo
      run: |
        hugo mod vendor
        hugo -e production --logLevel debug --minify
      working-directory: ${{ github.workspace }}/website
    - name: Zip Artifacts for Upload
      run: |
        zip ${{ runner.temp }}/metaschema-website.zip -r public/
      working-directory: ${{ github.workspace }}/website
    - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
      with:
        name: website
        path: |
          ${{ runner.temp }}/metaschema-website.zip
        retention-days: 5
    - name: Link Checker
      id: linkchecker
      uses: lycheeverse/lychee-action@ec3ed119d4f44ad2673a7232460dc7dff59d2421
      with:
        args: --exclude-file ./build/config/.lycheeignore --verbose --no-progress --accept 200,206,429 './website/public/**/*.html' --remap "https://pages.nist.gov/metaschema/ file://${GITHUB_WORKSPACE}/website/public/" --exclude-mail
        format: markdown
        output: html-link-report.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
      with:
        name: html-link-report
        path: html-link-report.md
        retention-days: 5
    - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      if: steps.linkchecker.outputs.exit_code != 0
      with:
        script: |
          core.setFailed('Link checker detected broken or invalid links, read attached report.')
    - uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      if: steps.linkchecker.outputs.exit_code != 0 && (github.event.inputs.bad_links_fail_build == 'true' || inputs.bad_links_fail_build == true)
      with:
        script: |
          core.setFailed('Link checker detected broken or invalid links, read attached report.')
    - name: Deploy Website (using access_token)
      uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847
      if: github.event_name == 'push' && inputs.commit_resources == true && github.ref_name == 'main'
      with:
        github_token: ${{ secrets.access_token }}
        enable_jekyll: false
        publish_dir: ./website/public
        publish_branch: nist-pages
        commit_message: Deploying website [ci deploy skip]
    - name: Deploy Website (using COMMIT_TOKEN)
      uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.commit_resources == 'true' && github.ref_name == 'main'
      with:
        github_token: ${{ secrets.COMMIT_TOKEN }}
        enable_jekyll: false
        publish_dir: ./website/public
        publish_branch: nist-pages
        commit_user_name: GitHub Actions Bot
        commit_user_email: metaschema@nist.gov
        commit_author: GitHub Actions Bot <metaschema@nist.gov>
        commit_message: Deploying website [ci deploy skip]
